[
  {
    "ClassName": "CS 1",
    "ClassType": "Lower Division Requirement",
    "Units": 1,
    "ClassDescription": "Introduction to department resources and principal topics and key ideas in computer science and computer engineering. Assignments given to bolster independent study and writing skills.",
    "Difficulty": 1,
    "prereqs": "N/A"
  },
  {
    "ClassName": "CS 31",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to computer science via theory, applications, and programming. Basic data types, operators and control structures. Input/output. Procedural and data abstraction. Introduction to object-oriented software development. Functions, recursion. Arrays, strings, pointers. Abstract data types, object-oriented programming. Examples and exercises from computer science theory and applications.",
    "Difficulty": 2,
    "prereqs": "N/A"
  },
  {
    "ClassName": "CS 32",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Object-oriented software development. Abstract data type definition and use. Overloading, inheritance, polymorphism. Object-oriented view of data structures: stacks, queues, lists. Algorithm analysis. Trees, graphs, and associated algorithms. Searching and sorting. Case studies and exercises from computer science applications.",
    "Difficulty": 3,
    "prereqs": "CS 31"
  },
  {
    "ClassName": "CS 33",
    "ClassType": "Lower Division Requirement",
    "Units": 5,
    "ClassDescription": "Introductory course on computer architecture, assembly language, and operating systems fundamentals. Number systems, machine language, and assembly language. Procedure calls, stacks, interrupts, and traps. Assemblers, linkers, and loaders. Operating systems concepts: processes and process management, input/output (I/O) programming, memory management, file systems.",
    "Difficulty": 4,
    "prereqs": "CS 31, CS 32"
  },
  {
    "ClassName": "CS 35L",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Fundamentals of tools and environments for software construction projects, particularly open-source platforms used in upper-division computer science courses. Software practice through collaborative student project.",
    "Difficulty": 4,
    "prereqs": "CS 31"
  },
  {
    "ClassName": "CS M51A",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to digital systems. Specification and implementation of combinational and sequential systems. Standard logic modules and programmable logic arrays. Specification and implementation of algorithmic systems: data and control sections. Number systems and arithmetic algorithms. Error control codes for digital information.",
    "Difficulty": 3,
    "prereqs": "N/A"
  },
  {
    "ClassName": "Math 31A",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Differential calculus and applications; introduction to integration.",
    "Difficulty": 3,
    "prereqs": "N/A"
  },
  {
    "ClassName": "Math 31B",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Transcendental functions; methods and applications of integration; sequences and series.",
    "Difficulty": 3,
    "prereqs": "Math 31A"
  },
  {
    "ClassName": "Math 32A",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to differential calculus of several variables, vector field theory.",
    "Difficulty": 4,
    "prereqs": "Math 31A"
  },
  {
    "ClassName": "Math 32B",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to integral calculus of several variables, line and surface integrals.",
    "Difficulty": 4,
    "prereqs": "Math 31A, Math 31B, Math 32A"
  },
  {
    "ClassName": "Math 33A",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to linear algebra: systems of linear equations, matrix algebra, linear independence, subspaces, bases and dimension, orthogonality, least-squares methods, determinants, eigenvalues and eigenvectors, matrix diagonalization, and symmetric matrices.",
    "Difficulty": 4,
    "prereqs": "Math 31A, Math 31B or Math 32A"
  },
  {
    "ClassName": "Math 33B",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "First-order, linear differential equations; second-order, linear differential equations with constant coefficients; power series solutions; linear systems.",
    "Difficulty": 5,
    "prereqs": "Math 31A, Math 31B"
  },
  {
    "ClassName": "Math 61",
    "ClassType": "Lower Division Requirement",
    "Units": 4,
    "ClassDescription": "Discrete structures commonly used in computer science and mathematics, including sets and relations, permutations and combinations, graphs and trees, induction.",
    "Difficulty": 4,
    "prereqs": "Math 31A, Math 31B"
  },
  {
    "ClassName": "Physics 1A",
    "ClassType": "Lower Division Requirement",
    "Units": 5,
    "ClassDescription": "Motion, Newton laws, work, energy, linear and angular momentum, rotation, equilibrium, gravitation.",
    "Difficulty": 3,
    "prereqs": "Math 31A, Math 31B, Math 32A"
  },
  {
    "ClassName": "Physics 1B",
    "ClassType": "Lower Division Requirement",
    "Units": 5,
    "ClassDescription": "Fluid mechanics, oscillation, mechanical waves, and sound. Electric charge, field and potential, capacitors, and dielectrics. Currents and resistance, direct-current circuits.",
    "Difficulty": 4,
    "prereqs": "Math 31A, Math 31B, Math 32A, Math 32B, Physics 1A"
  },
  {
    "ClassName": "Physics 1C",
    "ClassType": "Lower Division Requirement",
    "Units": 5,
    "ClassDescription": "Magnetic fields, Ampere's law, Faraday's law, inductance, and alternating current circuits. Maxwell's equations, electromagnetic waves, light, geometrical optics, interference and diffraction.",
    "Difficulty": 4,
    "prereqs": "Math 31A, Math 31B, Math 32A, Math 32B, Math 33A, Physics 1A, Physics 1B"
  },
  {
    "ClassName": "Physics 4AL",
    "ClassType": "Lower Division Requirement",
    "Units": 2,
    "ClassDescription": "*Fulfills Same Requirement as Physics 4BL* Computerized measurements of uniform and accelerated motion, including oscillations. Analysis of data and comparison of results to predictions, including least-squares fitting. Conception, execution, and presentation of creative projects involving motion.",
    "Difficulty": 3,
    "prereqs": "Math 31A, Math 31B, Math 32A, Physics 1A, Physics 1B"
  },
  {
    "ClassName": "Physics 4BL",
    "ClassType": "Lower Division Requirement",
    "Units": 2,
    "ClassDescription": "*Fulfills Same Requirement as Physics 4AL* Sound waves and electric circuits, taken by digital oscilloscopes and analyzed by Fourier transformation. Geometrical and physical optics. Conception, execution, and presentation of creative projects involving sound waves or electric circuits.",
    "Difficulty": 3,
    "prereqs": "Math 31A, Math 31B, Math 32A, Math 32B, Math 33A, Physics 1A, Physics 1B, Physics 1C"
  },
  {
    "ClassName": "CS 111",
    "ClassType": "Upper Division CS Requirement",
    "Units": 5,
    "ClassDescription": "Introduction to operating systems design and evaluation. Computer software systems performance, robustness, and functionality. Kernel structure, bootstrapping, input/output (I/O) devices and interrupts. Processes and threads; address spaces, memory management, and virtual memory. Scheduling, synchronization. File systems: layout, performance, robustness. Distributed systems: networking, remote procedure call (RPC), asynchronous RPC, distributed file systems, transactions. Protection and security. Exercises involving applications using, and internals of, real-world operating systems.",
    "Difficulty": 5,
    "prereqs": "CS 31, CS 32, CS 33, CS 35L"
  },
  {
    "ClassName": "CS 118",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to design and performance evaluation of computer networks, including such topics as what protocols are, layered network architecture, Internet protocol architecture, network applications, transport protocols, routing algorithms and protocols, internetworking, congestion control, and link layer protocols including Ethernet and wireless channels.",
    "Difficulty": 4,
    "prereqs": "CS 31, CS 32, CS 33, CS 35L, CS 111"
  },
  {
    "ClassName": "CS 131",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "Basic concepts in design and use of programming languages, including abstraction, modularity, control mechanisms, types, declarations, syntax, and semantics. Study of several different language paradigms, including functional, object-oriented, and logic programming.",
    "Difficulty": 4,
    "prereqs": "CS 31, CS 32, CS 33, CS 35L"
  },
  {
    "ClassName": "CS M151B",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "Computer system organization and design, implementation of CPU datapath and control, instruction set design, memory hierarchy (caches, main memory, virtual memory) organization and management, input/output subsystems (bus structures, interrupts, DMA), performance evaluation, pipelined processors.",
    "Difficulty": 4,
    "prereqs": "CS 31, CS 32, CS 33, CS M51A"
  },
  {
    "ClassName": "CS M152A",
    "ClassType": "Upper Division CS Requirement",
    "Units": 2,
    "ClassDescription": "Hands-on design, implementation, and debugging of digital logic circuits, use of computer-aided design tools for schematic capture and simulation, implementation of complex circuits using programmed array logic, design projects.",
    "Difficulty": 3,
    "prereqs": "CS 31, CS 32, CS 33, CS M51A"
  },
  {
    "ClassName": "CS 180",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "Introduction to design and analysis of algorithms. Design techniques (divide-and-conquer, greedy method, dynamic programming), selection of prototypical algorithms, choice of data structures and representations, complexity measures (time, space, upper, lower bounds, asymptotic complexity), NP-completeness.",
    "Difficulty": 5,
    "prereqs": "CS 31, CS 32, Math 31A, Math 31B, Math 61"
  },
  {
    "ClassName": "CS 181",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "Grammars, automata, and languages. Finite-state languages and finite-state automata. Context-free languages and pushdown story automata. Unrestricted rewriting systems, recursively enumerable and recursive languages, and Turing machines. Closure properties, pumping lemmas, and decision algorithms. Introduction to computability.",
    "Difficulty": 4,
    "prereqs": "CS 31, CS 32, Math 31A, Math 31B, Math 62, CS 181"
  },
  {
    "ClassName": "CS 130",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "*Fulfills Same Requirement as CS 152B* Structured programming, program specification, program proving, modularity, abstract data types, composite design, software tools, software control systems, program testing, team programming.",
    "Difficulty": 3,
    "prereqs": "CS 31, CS 32, CS 33, CS 35L, CS 111, CS 131"
  },
  {
    "ClassName": "CS 152B",
    "ClassType": "Upper Division CS Requirement",
    "Units": 4,
    "ClassDescription": "*Fulfills Same Requirement as CS 130* Limited to seniors. Design and implementation of complex digital subsystems using field-programmable gate arrays (e.g., processors, special-purpose processors, device controllers, and input/output interfaces). Students work in teams to develop and implement designs and to document and give oral presentations of their work.",
    "Difficulty": 3,
    "prereqs": "CS 31, CS 32, CS 33, CS M51A, CS 151B"
  }
]
